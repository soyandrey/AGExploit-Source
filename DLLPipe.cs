

using System;
using System.IO;
using System.IO.Pipes;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using System.Windows.Forms;

namespace agexploit
{
  internal class DLLPipe
  {
    public static string luapipename = "GayCuntDontSkid";

    [DllImport("kernel32.dll", CharSet = CharSet.Auto, SetLastError = true)]
    public static extern bool WaitNamedPipe(string pipe, int timeout = 10);

    public static bool NamedPipeExist() => DLLPipe.WaitNamedPipe("\\\\.\\pipe\\" + DLLPipe.luapipename);

    public static void LuaPipe(string script)
    {
      if (DLLPipe.NamedPipeExist())
      {
        new Thread((ThreadStart) (() =>
        {
          try
          {
            using (NamedPipeClientStream pipeClientStream = new NamedPipeClientStream(".", DLLPipe.luapipename, PipeDirection.Out))
            {
              pipeClientStream.Connect();
              using (StreamWriter streamWriter = new StreamWriter((Stream) pipeClientStream, Encoding.Default, 999999))
              {
                streamWriter.Write(script);
                streamWriter.Dispose();
              }
              pipeClientStream.Dispose();
            }
          }
          catch (IOException ex)
          {
            int num2 = (int) MessageBox.Show("Can't Connect to Pipe, Connection Errot (Restart PC Or Kill Roblox)", "Delta", MessageBoxButtons.OK, MessageBoxIcon.Hand);
          }
          catch (Exception ex)
          {
            int num3 = (int) MessageBox.Show("Unknown error", "Delta", MessageBoxButtons.OK, MessageBoxIcon.Hand);
          }
        })).Start();
      }
      else
      {
        int num1 = (int) MessageBox.Show("Inject Before Executing", "Delta", MessageBoxButtons.OK, MessageBoxIcon.Hand);
      }
    }
  }
}
