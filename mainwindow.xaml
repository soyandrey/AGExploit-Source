<Window x:Class="agexploit.MainWindow"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:agexploit"
        Title="MainWindow" WindowStartupLocation="CenterScreen" ResizeMode="NoResize" Height="518"
        Width="1025" AllowsTransparency="true" WindowStyle="None" Background="Transparent">
  <FrameworkElement.Resources>
    <Style x:Key="OpacityBttn" TargetType="{x:Type Button}">
      <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
      <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
      <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border Name="IDK" Background="{TemplateBinding Control.Background}" CornerRadius="16">
              <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="UIElement.IsMouseOver" Value="true">
                <TriggerBase.EnterActions>
                  <BeginStoryboard>
                    <Storyboard>
                      <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="(Button.Opacity)" To="0.4"/>
                    </Storyboard>
                  </BeginStoryboard>
                </TriggerBase.EnterActions>
                <TriggerBase.ExitActions>
                  <BeginStoryboard>
                    <Storyboard>
                      <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Button.Opacity)" To="1"/>
                    </Storyboard>
                  </BeginStoryboard>
                </TriggerBase.ExitActions>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="InvisibleTextBox" TargetType="{x:Type TextBox}">
      <Setter Property="Control.Background" Value="Transparent"/>
      <Setter Property="Control.BorderBrush" Value="Transparent"/>
      <Setter Property="FrameworkElement.ContextMenu" Value="{x:Null}"/>
      <Setter Property="TextBoxBase.CaretBrush" Value="Transparent"/>
      <Setter Property="Control.Foreground" Value="White"/>
      <Setter Property="Control.BorderThickness" Value="0"/>
      <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
      <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
      <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
      <Setter Property="UIElement.AllowDrop" Value="true"/>
      <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
      <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
      <Setter Property="Control.Padding" Value="0"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type TextBox}">
            <Border Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
              <Grid>
                <ScrollViewer Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden"
                              VerticalScrollBarVisibility="Hidden"/>
              </Grid>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="TextBoxBase.IsInactiveSelectionHighlightEnabled" Value="true"/>
          </MultiTrigger.Conditions>
        </MultiTrigger>
      </Style.Triggers>
    </Style>
    <Style x:Key="ButtonA" TargetType="{x:Type Button}">
      <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
      <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
      <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border Name="IDK" Background="{TemplateBinding Control.Background}" CornerRadius="16">
              <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="UIElement.IsMouseOver" Value="true">
                <TriggerBase.EnterActions>
                  <BeginStoryboard>
                    <Storyboard>
                      <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                      To="#151515"/>
                    </Storyboard>
                  </BeginStoryboard>
                </TriggerBase.EnterActions>
                <TriggerBase.ExitActions>
                  <BeginStoryboard>
                    <Storyboard>
                      <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                      To="#202020"/>
                    </Storyboard>
                  </BeginStoryboard>
                </TriggerBase.ExitActions>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="ButtonG" TargetType="{x:Type Button}">
      <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
      <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
      <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border Name="IDK" Background="{TemplateBinding Control.Background}" CornerRadius="16">
              <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="UIElement.IsMouseOver" Value="true">
                <TriggerBase.EnterActions>
                  <BeginStoryboard>
                    <Storyboard>
                      <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                      To="#202020"/>
                    </Storyboard>
                  </BeginStoryboard>
                </TriggerBase.EnterActions>
                <TriggerBase.ExitActions>
                  <BeginStoryboard>
                    <Storyboard>
                      <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                      To="Black"/>
                    </Storyboard>
                  </BeginStoryboard>
                </TriggerBase.ExitActions>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="Tabgg" TargetType="{x:Type TabControl}">
      <Setter Property="FrameworkElement.VerticalAlignment" Value="Stretch"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type TabControl}">
            <Grid SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local" ClipToBounds="true">
              <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="CDefinition0"/>
                <ColumnDefinition x:Name="CDefinition1" Width="0"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition x:Name="RDefinition0" Height="Auto"/>
                <RowDefinition x:Name="RDefinition1" Height="*"/>
              </Grid.RowDefinitions>
              <DockPanel>
                <TabPanel IsItemsHost="true"/>
                <Button Name="AddT" Style="{DynamicResource OpacityBttn}" HorizontalAlignment="Left"
                        Background="Transparent" Content="" Foreground="White" FontSize="18"
                        FontFamily="/agexploit;component/Assets/Fonts/#Segoe Fluent Icons" Width="23"/>
              </DockPanel>
              <Border CornerRadius="0 0 7 7" Background="#FF232323" KeyboardNavigation.TabIndex="2" Grid.Column="0"
                      KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1">
                <ContentPresenter ContentSource="SelectedContent"/>
              </Border>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="EETABSSSSSS" TargetType="{x:Type TabItem}">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type TabItem}">
            <Grid>
              <Border Name="Mainn" CornerRadius="3 3 0 0" Width="88" Height="24" Margin="0" BorderThickness="0"
                      Background="{TemplateBinding Control.Background}">
                <Border x:Name="Blueee" Height="1" VerticalAlignment="Bottom" BorderThickness="0" Background="#FF33B8FB"/>
              </Border>
              <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="false" HorizontalAlignment="Left"
                                Margin="5, 4, 0, 0" RecognizesAccessKey="true"/>
              <Button Name="RemoveT" Width="20.5" Height="20.5" Style="{DynamicResource OpacityBttn}"
                      HorizontalAlignment="Left" Background="Transparent" Content="" Margin="67 0 0 0 "
                      Foreground="White" FontSize="11" HorizontalContentAlignment="Center"
                      VerticalContentAlignment="Center"
                      FontFamily="/agexploit;component/Assets/Fonts/#Segoe Fluent Icons"/>
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="TabItem.IsSelected" Value="true">
                <Setter Property="Control.Background" Value="#FF232323"/>
                <Setter Property="UIElement.Opacity" Value="1"/>
                <Setter TargetName="Blueee" Property="UIElement.Visibility" Value="Visible"/>
                <Setter TargetName="RemoveT" Property="UIElement.IsEnabled" Value="true"/>
                <Setter Property="FrameworkElement.Width" Value="88"/>
              </Trigger>
              <Trigger Property="TabItem.IsSelected" Value="false">
                <Setter Property="Control.Background" Value="#FF232323"/>
                <Setter Property="UIElement.Opacity" Value="0.4"/>
                <Setter TargetName="Blueee" Property="UIElement.Visibility" Value="Hidden"/>
                <Setter TargetName="RemoveT" Property="UIElement.IsEnabled" Value="false"/>
                <Setter Property="FrameworkElement.Width" Value="88"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="SeperatorLabel" TargetType="{x:Type Label}">
      <Setter Property="Control.Foreground" Value="{DynamicResource MaterialDesignBody}"/>
      <Setter Property="Control.Background" Value="Transparent"/>
      <Setter Property="Control.Padding" Value="4"/>
      <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
      <Setter Property="Control.VerticalContentAlignment" Value="Top"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Label}">
            <Border BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}" Padding="{TemplateBinding Control.Padding}"
                    SnapsToDevicePixels="true">
              <Grid>
                <ContentPresenter ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                  Content="{TemplateBinding ContentControl.Content}"
                                  ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                  RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
                <Separator Width="{TemplateBinding FrameworkElement.Width}" Margin="0,18.667,0,-14.667" Background="White"/>
              </Grid>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter Property="UIElement.Opacity" Value="0.56"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="ScrollBarStyle1" TargetType="{x:Type ScrollBar}">
      <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
      <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
      <Setter Property="Control.Background" Value="Transparent"/>
      <Setter Property="Control.BorderBrush" Value="Transparent"/>
      <Setter Property="Control.Foreground" Value="{DynamicResource MaterialDesignSelection}"/>
      <Setter Property="Control.BorderThickness" Value="1,0"/>
      <Setter Property="FrameworkElement.Width"
              Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
      <Setter Property="FrameworkElement.MinWidth"
              Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ScrollBar}">
            <Grid x:Name="Bg" Opacity="0.5" SnapsToDevicePixels="true">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"
                               MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                <RowDefinition Height="1E-05*"/>
                <RowDefinition Height="Auto"
                               MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
              </Grid.RowDefinitions>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="MouseOver">
                    <Storyboard>
                      <DoubleAnimation Duration="0:0:0.2" To="0.8" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Bg"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Disabled">
                    <Storyboard>
                      <DoubleAnimation Duration="0:0:0.2" To="0.35" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Bg"/>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Border BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Background="{TemplateBinding Control.Background}" Grid.Row="1"/>
              <RepeatButton x:Name="PART_LineUpButton" Visibility="Hidden" Command="ScrollBar.LineUpCommand"
                            IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Grid.Row="0" Background="{x:Null}"
                            Foreground="{x:Null}" BorderBrush="{x:Null}">
                <FrameworkElement.Style>
                  <Style TargetType="{x:Type RepeatButton}">
                    <Setter Property="FrameworkElement.FocusVisualStyle">
                      <Setter.Value>
                        <Style>
                          <Setter Property="Control.Template">
                            <Setter.Value>
                              <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="true"
                                           Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                                           StrokeDashArray="1 2"/>
                              </ControlTemplate>
                            </Setter.Value>
                          </Setter>
                        </Style>
                      </Setter.Value>
                    </Setter>
                    <Setter Property="Control.BorderBrush" Value="{DynamicResource MaterialDesignSelection}"/>
                    <Setter Property="Control.Background" Value="{DynamicResource MaterialDesignSelection}"/>
                    <Setter Property="Control.BorderThickness" Value="1"/>
                    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Control.Padding" Value="1"/>
                    <Setter Property="UIElement.Focusable" Value="false"/>
                    <Setter Property="Control.IsTabStop" Value="false"/>
                    <Setter Property="UIElement.Visibility"
                            Value="{Binding (materialDesign:ScrollBarAssist.ButtonsVisibility), RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ScrollBar}}}"/>
                    <Setter Property="Control.Template">
                      <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                          <Border x:Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1"
                                  Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                              Content="{TemplateBinding ContentControl.Content}"
                                              ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Focusable="false"
                                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Control.Padding}"
                                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
                          </Border>
                          <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="true">
                              <Setter Value="{DynamicResource MaterialDesignDivider}" Property="Control.Background"/>
                              <Setter Value="{DynamicResource MaterialDesignDivider}" Property="Control.BorderBrush"/>
                            </Trigger>
                            <Trigger Property="ButtonBase.IsPressed" Value="true">
                              <Setter Value="{DynamicResource MaterialDesignDivider}" Property="Control.Background"/>
                              <Setter Value="{DynamicResource MaterialDesignDivider}" Property="Control.BorderBrush"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="false">
                              <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.56"/>
                            </Trigger>
                          </ControlTemplate.Triggers>
                        </ControlTemplate>
                      </Setter.Value>
                    </Setter>
                  </Style>
                </FrameworkElement.Style>
                <Viewbox Height="12" Margin="2,3,2,1" Width="12">
                  <Canvas Height="24" Width="24">
                    <Path x:Name="ArrowTop"
                          Data="M 13,20 L 11,20 11,8 5.5,13.5 4.08,12.08 12,4.16 19.92,12.08 18.5,13.5 13,8 13,20 Z"
                          Fill="{DynamicResource MaterialDesignBody}" Stretch="Uniform"/>
                  </Canvas>
                </Viewbox>
              </RepeatButton>
              <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding UIElement.IsMouseOver}"
                     Grid.Row="1">
                <Track.DecreaseRepeatButton>
                  <RepeatButton Command="ScrollBar.PageUpCommand">
                    <FrameworkElement.Style>
                      <Style TargetType="{x:Type RepeatButton}">
                        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
                        <Setter Property="Control.Background" Value="Transparent"/>
                        <Setter Property="UIElement.Focusable" Value="false"/>
                        <Setter Property="Control.IsTabStop" Value="false"/>
                        <Setter Property="Control.Template">
                          <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                              <Rectangle Fill="{TemplateBinding Control.Background}" Height="{TemplateBinding FrameworkElement.Height}"
                                         Width="{TemplateBinding FrameworkElement.Width}"/>
                            </ControlTemplate>
                          </Setter.Value>
                        </Setter>
                      </Style>
                    </FrameworkElement.Style>
                  </RepeatButton>
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                  <RepeatButton Command="ScrollBar.PageDownCommand">
                    <FrameworkElement.Style>
                      <Style TargetType="{x:Type RepeatButton}">
                        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
                        <Setter Property="Control.Background" Value="Transparent"/>
                        <Setter Property="UIElement.Focusable" Value="false"/>
                        <Setter Property="Control.IsTabStop" Value="false"/>
                        <Setter Property="Control.Template">
                          <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                              <Rectangle Fill="{TemplateBinding Control.Background}" Height="{TemplateBinding FrameworkElement.Height}"
                                         Width="{TemplateBinding FrameworkElement.Width}"/>
                            </ControlTemplate>
                          </Setter.Value>
                        </Setter>
                      </Style>
                    </FrameworkElement.Style>
                  </RepeatButton>
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                  <Thumb Style="{DynamicResource thumbyes}"/>
                </Track.Thumb>
              </Track>
              <RepeatButton x:Name="PART_LineDownButton" Visibility="Hidden" Command="ScrollBar.LineDownCommand"
                            IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Grid.Row="2">
                <FrameworkElement.Style>
                  <Style TargetType="{x:Type RepeatButton}">
                    <Setter Property="FrameworkElement.FocusVisualStyle">
                      <Setter.Value>
                        <Style>
                          <Setter Property="Control.Template">
                            <Setter.Value>
                              <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="true"
                                           Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                                           StrokeDashArray="1 2"/>
                              </ControlTemplate>
                            </Setter.Value>
                          </Setter>
                        </Style>
                      </Setter.Value>
                    </Setter>
                    <Setter Property="Control.BorderBrush" Value="{DynamicResource MaterialDesignSelection}"/>
                    <Setter Property="Control.Background" Value="{DynamicResource MaterialDesignSelection}"/>
                    <Setter Property="Control.BorderThickness" Value="1"/>
                    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Control.Padding" Value="1"/>
                    <Setter Property="UIElement.Focusable" Value="false"/>
                    <Setter Property="Control.IsTabStop" Value="false"/>
                    <Setter Property="UIElement.Visibility"
                            Value="{Binding (materialDesign:ScrollBarAssist.ButtonsVisibility), RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ScrollBar}}}"/>
                    <Setter Property="Control.Template">
                      <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                          <Border x:Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1"
                                  Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                              Content="{TemplateBinding ContentControl.Content}"
                                              ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Focusable="false"
                                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Control.Padding}"
                                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
                          </Border>
                          <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="true">
                              <Setter Value="{DynamicResource MaterialDesignDivider}" Property="Control.Background"/>
                              <Setter Value="{DynamicResource MaterialDesignDivider}" Property="Control.BorderBrush"/>
                            </Trigger>
                            <Trigger Property="ButtonBase.IsPressed" Value="true">
                              <Setter Value="{DynamicResource MaterialDesignDivider}" Property="Control.Background"/>
                              <Setter Value="{DynamicResource MaterialDesignDivider}" Property="Control.BorderBrush"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="false">
                              <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.56"/>
                            </Trigger>
                          </ControlTemplate.Triggers>
                        </ControlTemplate>
                      </Setter.Value>
                    </Setter>
                  </Style>
                </FrameworkElement.Style>
                <Viewbox Height="12" Margin="2,3,2,1" Width="12">
                  <Canvas Height="24" Width="24">
                    <Path x:Name="ArrowBottom"
                          Data="M 11,4 L 13,4 13,16 18.5,10.5 19.92,11.92 12,19.84 4.08,11.92 5.5,10.5 11,16 11,4 Z"
                          Fill="{DynamicResource MaterialDesignBody}" Stretch="Uniform"/>
                  </Canvas>
                </Viewbox>
              </RepeatButton>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <Trigger Property="UIElement.IsEnabled" Value="false">
          <Setter Property="UIElement.Opacity" Value="0.56"/>
        </Trigger>
        <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
          <Setter Property="FrameworkElement.Width" Value="Auto"/>
          <Setter Property="FrameworkElement.MinWidth" Value="0"/>
          <Setter Property="FrameworkElement.Height"
                  Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
          <Setter Property="FrameworkElement.MinHeight"
                  Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
          <Setter Property="Control.BorderThickness" Value="0,1"/>
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type ScrollBar}">
                <Grid x:Name="Bg" Opacity="0.5" SnapsToDevicePixels="true">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"
                                      Width="Auto"/>
                    <ColumnDefinition Width="1E-05*"/>
                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"
                                      Width="Auto"/>
                  </Grid.ColumnDefinitions>
                  <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                      <VisualState x:Name="Normal"/>
                      <VisualState x:Name="MouseOver">
                        <Storyboard>
                          <DoubleAnimation Duration="0:0:0.2" To="0.8" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Bg"/>
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Disabled">
                        <Storyboard>
                          <DoubleAnimation Duration="0:0:0.2" To="0.35" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Bg"/>
                        </Storyboard>
                      </VisualState>
                    </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Border BorderBrush="{TemplateBinding Control.BorderBrush}"
                          BorderThickness="{TemplateBinding Control.BorderThickness}"
                          Background="{TemplateBinding Control.Background}" Grid.Column="1"/>
                  <RepeatButton x:Name="PART_LineLeftButton" Grid.Column="0" Command="ScrollBar.LineLeftCommand"
                                IsEnabled="{TemplateBinding UIElement.IsMouseOver}">
                    <FrameworkElement.Style>
                      <Style TargetType="{x:Type RepeatButton}">
                        <Setter Property="FrameworkElement.FocusVisualStyle">
                          <Setter.Value>
                            <Style>
                              <Setter Property="Control.Template">
                                <Setter.Value>
                                  <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="true"
                                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                                               StrokeDashArray="1 2"/>
                                  </ControlTemplate>
                                </Setter.Value>
                              </Setter>
                            </Style>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Control.BorderBrush" Value="{DynamicResource MaterialDesignSelection}"/>
                        <Setter Property="Control.Background" Value="{DynamicResource MaterialDesignSelection}"/>
                        <Setter Property="Control.BorderThickness" Value="1"/>
                        <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Control.Padding" Value="1"/>
                        <Setter Property="UIElement.Focusable" Value="false"/>
                        <Setter Property="Control.IsTabStop" Value="false"/>
                        <Setter Property="UIElement.Visibility"
                                Value="{Binding (materialDesign:ScrollBarAssist.ButtonsVisibility), RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ScrollBar}}}"/>
                        <Setter Property="Control.Template">
                          <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                              <Border x:Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1"
                                      Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                                  Content="{TemplateBinding ContentControl.Content}"
                                                  ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Focusable="false"
                                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Control.Padding}"
                                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
                              </Border>
                              <ControlTemplate.Triggers>
                                <Trigger Property="UIElement.IsMouseOver" Value="true">
                                  <Setter Value="{DynamicResource MaterialDesignDivider}" Property="Control.Background"/>
                                  <Setter Value="{DynamicResource MaterialDesignDivider}" Property="Control.BorderBrush"/>
                                </Trigger>
                                <Trigger Property="ButtonBase.IsPressed" Value="true">
                                  <Setter Value="{DynamicResource MaterialDesignDivider}" Property="Control.Background"/>
                                  <Setter Value="{DynamicResource MaterialDesignDivider}" Property="Control.BorderBrush"/>
                                </Trigger>
                                <Trigger Property="UIElement.IsEnabled" Value="false">
                                  <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.56"/>
                                </Trigger>
                              </ControlTemplate.Triggers>
                            </ControlTemplate>
                          </Setter.Value>
                        </Setter>
                      </Style>
                    </FrameworkElement.Style>
                    <Viewbox Height="12" Margin="3,2,1,2" Width="12">
                      <Canvas Height="24" Width="24">
                        <Path x:Name="ArrowLeft"
                              Data="M 20,11 L 20,13 8,13 13.5,18.5 12.08,19.92 4.16,12 12.08,4.08 13.5,5.5 8,11 20,11 Z"
                              Fill="{DynamicResource MaterialDesignBody}" Stretch="Uniform"/>
                      </Canvas>
                    </Viewbox>
                  </RepeatButton>
                  <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding UIElement.IsMouseOver}">
                    <Track.DecreaseRepeatButton>
                      <RepeatButton Command="ScrollBar.PageLeftCommand">
                        <FrameworkElement.Style>
                          <Style TargetType="{x:Type RepeatButton}">
                            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
                            <Setter Property="Control.Background" Value="Transparent"/>
                            <Setter Property="UIElement.Focusable" Value="false"/>
                            <Setter Property="Control.IsTabStop" Value="false"/>
                            <Setter Property="Control.Template">
                              <Setter.Value>
                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                  <Rectangle Fill="{TemplateBinding Control.Background}" Height="{TemplateBinding FrameworkElement.Height}"
                                             Width="{TemplateBinding FrameworkElement.Width}"/>
                                </ControlTemplate>
                              </Setter.Value>
                            </Setter>
                          </Style>
                        </FrameworkElement.Style>
                      </RepeatButton>
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                      <RepeatButton Command="ScrollBar.PageRightCommand">
                        <FrameworkElement.Style>
                          <Style TargetType="{x:Type RepeatButton}">
                            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
                            <Setter Property="Control.Background" Value="Transparent"/>
                            <Setter Property="UIElement.Focusable" Value="false"/>
                            <Setter Property="Control.IsTabStop" Value="false"/>
                            <Setter Property="Control.Template">
                              <Setter.Value>
                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                  <Rectangle Fill="{TemplateBinding Control.Background}" Height="{TemplateBinding FrameworkElement.Height}"
                                             Width="{TemplateBinding FrameworkElement.Width}"/>
                                </ControlTemplate>
                              </Setter.Value>
                            </Setter>
                          </Style>
                        </FrameworkElement.Style>
                      </RepeatButton>
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                      <Thumb>
                        <FrameworkElement.Style>
                          <Style TargetType="{x:Type Thumb}">
                            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
                            <Setter Property="Control.IsTabStop" Value="false"/>
                            <Setter Property="Control.Template">
                              <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Thumb}">
                                  <Border Background="Transparent">
                                    <Border x:Name="border" BorderThickness="0" Background="{DynamicResource MaterialDesignBody}"
                                            Height="{TemplateBinding FrameworkElement.Height}" Opacity="0.5" SnapsToDevicePixels="true"
                                            Width="{TemplateBinding FrameworkElement.Width}"
                                            CornerRadius="{Binding (materialDesign:ScrollBarAssist.ThumbCornerRadius), RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ScrollBar}}}"/>
                                  </Border>
                                  <ControlTemplate.Triggers>
                                    <Trigger Property="Thumb.IsDragging" Value="true">
                                      <Setter TargetName="border" Property="UIElement.Opacity" Value="0.8"/>
                                    </Trigger>
                                    <DataTrigger Value="Vertical"
                                                 Binding="{Binding Orientation, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ScrollBar}}}">
                                      <Setter TargetName="border"
                                              Value="{Binding (materialDesign:ScrollBarAssist.ThumbWidth), RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ScrollBar}}}"
                                              Property="FrameworkElement.Width"/>
                                    </DataTrigger>
                                    <DataTrigger Value="Horizontal"
                                                 Binding="{Binding Orientation, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ScrollBar}}}">
                                      <Setter TargetName="border"
                                              Value="{Binding (materialDesign:ScrollBarAssist.ThumbHeight), RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ScrollBar}}}"
                                              Property="FrameworkElement.Height"/>
                                    </DataTrigger>
                                  </ControlTemplate.Triggers>
                                </ControlTemplate>
                              </Setter.Value>
                            </Setter>
                          </Style>
                        </FrameworkElement.Style>
                      </Thumb>
                    </Track.Thumb>
                  </Track>
                  <RepeatButton x:Name="PART_LineRightButton" Grid.Column="2" Command="ScrollBar.LineRightCommand"
                                IsEnabled="{TemplateBinding UIElement.IsMouseOver}">
                    <FrameworkElement.Style>
                      <Style TargetType="{x:Type RepeatButton}">
                        <Setter Property="FrameworkElement.FocusVisualStyle">
                          <Setter.Value>
                            <Style>
                              <Setter Property="Control.Template">
                                <Setter.Value>
                                  <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="true"
                                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                                               StrokeDashArray="1 2"/>
                                  </ControlTemplate>
                                </Setter.Value>
                              </Setter>
                            </Style>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Control.BorderBrush" Value="{DynamicResource MaterialDesignSelection}"/>
                        <Setter Property="Control.Background" Value="{DynamicResource MaterialDesignSelection}"/>
                        <Setter Property="Control.BorderThickness" Value="1"/>
                        <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Control.Padding" Value="1"/>
                        <Setter Property="UIElement.Focusable" Value="false"/>
                        <Setter Property="Control.IsTabStop" Value="false"/>
                        <Setter Property="UIElement.Visibility"
                                Value="{Binding (materialDesign:ScrollBarAssist.ButtonsVisibility), RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ScrollBar}}}"/>
                        <Setter Property="Control.Template">
                          <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                              <Border x:Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1"
                                      Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                                  Content="{TemplateBinding ContentControl.Content}"
                                                  ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Focusable="false"
                                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Control.Padding}"
                                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
                              </Border>
                              <ControlTemplate.Triggers>
                                <Trigger Property="UIElement.IsMouseOver" Value="true">
                                  <Setter Value="{DynamicResource MaterialDesignDivider}" Property="Control.Background"/>
                                  <Setter Value="{DynamicResource MaterialDesignDivider}" Property="Control.BorderBrush"/>
                                </Trigger>
                                <Trigger Property="ButtonBase.IsPressed" Value="true">
                                  <Setter Value="{DynamicResource MaterialDesignDivider}" Property="Control.Background"/>
                                  <Setter Value="{DynamicResource MaterialDesignDivider}" Property="Control.BorderBrush"/>
                                </Trigger>
                                <Trigger Property="UIElement.IsEnabled" Value="false">
                                  <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.56"/>
                                </Trigger>
                              </ControlTemplate.Triggers>
                            </ControlTemplate>
                          </Setter.Value>
                        </Setter>
                      </Style>
                    </FrameworkElement.Style>
                    <Viewbox Height="12" Margin="3,2,1,2" Width="12">
                      <Canvas Height="24" Width="24">
                        <Path x:Name="ArrowRight"
                              Data="M 4,11 L 4,13 16,13 10.5,18.5 11.92,19.92 19.84,12 11.92,4.08 10.5,5.5 16,11 4,11 Z"
                              Fill="{DynamicResource MaterialDesignBody}" Stretch="Uniform"/>
                      </Canvas>
                    </Viewbox>
                  </RepeatButton>
                </Grid>
                <ControlTemplate.Triggers>
                  <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                      <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                      <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="ArrowRight" Value="{DynamicResource MaterialDesignBody}" Property="Shape.Fill"/>
                  </MultiDataTrigger>
                  <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                      <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                      <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="ArrowLeft" Value="{DynamicResource MaterialDesignBody}" Property="Shape.Fill"/>
                  </MultiDataTrigger>
                  <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                      <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                      <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="false"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="ArrowRight" Value="{DynamicResource MaterialDesignBody}" Property="Shape.Fill"/>
                  </MultiDataTrigger>
                  <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                      <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                      <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="false"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="ArrowLeft" Value="{DynamicResource MaterialDesignBody}" Property="Shape.Fill"/>
                  </MultiDataTrigger>
                  <Trigger Property="UIElement.IsEnabled" Value="false">
                    <Setter TargetName="ArrowLeft" Value="{DynamicResource MaterialDesignBody}" Property="Shape.Fill"/>
                    <Setter TargetName="ArrowRight" Value="{DynamicResource MaterialDesignBody}" Property="Shape.Fill"/>
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Trigger>
      </Style.Triggers>
    </Style>
    <Style x:Key="thumbyes" TargetType="{x:Type Thumb}">
      <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
      <Setter Property="Control.IsTabStop" Value="false"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Thumb}">
            <Border CornerRadius="5" Background="Transparent">
              <Border x:Name="border" BorderThickness="0" Background="{DynamicResource MaterialDesignBody}"
                      Height="{TemplateBinding FrameworkElement.Height}" Opacity="0.5" SnapsToDevicePixels="true"
                      Width="{TemplateBinding FrameworkElement.Width}"
                      CornerRadius="{Binding (materialDesign:ScrollBarAssist.ThumbCornerRadius), RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ScrollBar}}}"/>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="Thumb.IsDragging" Value="true">
                <Setter TargetName="border" Property="UIElement.Opacity" Value="0.8"/>
              </Trigger>
              <DataTrigger Value="Vertical"
                           Binding="{Binding Orientation, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ScrollBar}}}">
                <Setter TargetName="border"
                        Value="{Binding (materialDesign:ScrollBarAssist.ThumbWidth), RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ScrollBar}}}"
                        Property="FrameworkElement.Width"/>
              </DataTrigger>
              <DataTrigger Value="Horizontal"
                           Binding="{Binding Orientation, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ScrollBar}}}">
                <Setter TargetName="border"
                        Value="{Binding (materialDesign:ScrollBarAssist.ThumbHeight), RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ScrollBar}}}"
                        Property="FrameworkElement.Height"/>
              </DataTrigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </FrameworkElement.Resources>
  <Grid>
    <Border x:Name="mainborder" CornerRadius="8" Margin="101.5,51.5,136,70.5" Background="#FF171717">
      <Grid>
        <Border x:Name="gamehub_bar" Background="#FF232323" CornerRadius="7" Height="Auto"
                VerticalAlignment="Stretch" Margin="0,63,10,10" Width="140" HorizontalAlignment="Right">
          <ScrollViewer>
            <Grid Width="140" Height="427.998">
              <Label Content="ScriptHub" HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="White"
                     FontFamily="/UIR4;component/Assets/Fonts/#Poppins" Margin="3,3,0,0" Width="70"/>
              <Button Click="Button_Click_6" Style="{DynamicResource MaterialDesignFlatMidBgButton}"
                      Margin="3,30.4,10,270.598" Height="127" BorderBrush="{x:Null}">
                <Control.Background>
                  <ImageBrush RenderOptions.BitmapScalingMode="HighQuality" ImageSource="arsenal.png"/>
                </Control.Background>
              </Button>
              <Button Click="Button_Click_7" Style="{DynamicResource MaterialDesignFlatMidBgButton}"
                      Margin="3,162.4,10,138.598" Height="127" BorderBrush="{x:Null}">
                <Control.Background>
                  <ImageBrush RenderOptions.BitmapScalingMode="HighQuality" ImageSource="bloxfruit.png"/>
                </Control.Background>
              </Button>
              <Button Click="Button_Click_8" Style="{DynamicResource MaterialDesignFlatMidBgButton}"
                      Margin="3,294.4,10,6.598" Height="127" BorderBrush="{x:Null}">
                <Control.Background>
                  <ImageBrush RenderOptions.BitmapScalingMode="HighQuality" ImageSource="murdermystery.jpg"/>
                </Control.Background>
              </Button>
            </Grid>
          </ScrollViewer>
        </Border>
        <Border MouseDown="Border_MouseDown" CornerRadius="8 8 0 0" Opacity="0.9" Margin="0,0,0,358"
                Background="#FF232323">
          <Grid>
            <Image x:Name="logo" RenderOptions.BitmapScalingMode="HighQuality" Margin="0,0,708,0"
                   Source="Assets/Icons/aglogo-removebg-preview.png"/>
            <Button Click="Button_Click" Style="{DynamicResource OpacityBttn}" Content="" Foreground="White"
                    Margin="749.5,0,0,0" Width="38" Height="38"
                    FontFamily="/agexploit;component/Assets/Fonts/#Segoe Fluent Icons" FontSize="15"
                    BorderBrush="{x:Null}" Background="{x:Null}"/>
            <Button Click="Button_Click_10" Style="{DynamicResource OpacityBttn}" Content="" Foreground="White"
                    Margin="711.5,0,38,0" Width="38" Height="38"
                    FontFamily="/agexploit;component/Assets/Fonts/#Segoe Fluent Icons" FontSize="15"
                    BorderBrush="{x:Null}" Background="{x:Null}"/>
          </Grid>
        </Border>
        <Border x:Name="buttonbar" CornerRadius="7" Background="#FF222222" Margin="10,113.666,747.5,71.5"
                Width="30">
          <Grid Height="250">
            <Button Click="Button_Click_5" Style="{DynamicResource OpacityBttn}" Margin="0,177.666,0,42.333"
                    Height="30" Background="{x:Null}" BorderBrush="{x:Null}">
              <Image RenderOptions.BitmapScalingMode="HighQuality" Width="30" Height="22"
                     Source="Assets/Icons/execute.png"/>
            </Button>
            <Button Click="Button_Click_3" Style="{DynamicResource OpacityBttn}" Margin="0,142.666,0,77.333"
                    Height="30" Background="{x:Null}" BorderBrush="{x:Null}">
              <Image RenderOptions.BitmapScalingMode="HighQuality" Width="30" Height="22"
                     Source="Assets/Icons/openfile.png"/>
            </Button>
            <Button Click="Button_Click_2" Style="{DynamicResource OpacityBttn}" Margin="0,107.666,0,112.333"
                    Height="30" Background="{x:Null}" BorderBrush="{x:Null}">
              <Image RenderOptions.BitmapScalingMode="HighQuality" Width="30" Height="22"
                     Source="Assets/Icons/savefile.png"/>
            </Button>
            <Button Click="Button_Click_4" Style="{DynamicResource OpacityBttn}" Margin="0,72.666,0,147.333"
                    Height="30" Background="{x:Null}" BorderBrush="{x:Null}">
              <Image RenderOptions.BitmapScalingMode="HighQuality" Width="30" Height="22"
                     Source="Assets/Icons/inject.png"/>
            </Button>
            <Button Click="Button_Click_9" Style="{DynamicResource OpacityBttn}" Margin="0,37.666,0,182.333"
                    Height="30" Background="{x:Null}" BorderBrush="{x:Null}">
              <Image RenderOptions.BitmapScalingMode="HighQuality" Width="30" Height="22"
                     Source="Assets/Icons/scripthub.png"/>
            </Button>
            <Button Click="Button_Click_1" Style="{DynamicResource OpacityBttn}" Margin="0,2.666,0,217.333" Height="30"
                    Background="{x:Null}" BorderBrush="{x:Null}">
              <Image RenderOptions.BitmapScalingMode="HighQuality" Width="30" Height="22"
                     Source="Assets/Icons/settings.png"/>
            </Button>
          </Grid>
        </Border>
        <TabControl x:Name="tabControl" HorizontalAlignment="Left" Style="{DynamicResource Tabgg}"
                    Margin="54,63.667,0,10" VerticalAlignment="Stretch" Width="569" Height="322"/>
        <Border x:Name="sideBar" Background="#FF232323" CornerRadius="7" Height="Auto" VerticalAlignment="Stretch"
                Margin="0,63,10,10" Width="140" HorizontalAlignment="Right">
          <Grid>
            <Label Content="Explorer" HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="White"
                   FontFamily="/UIR4;component/Assets/Fonts/#Poppins" Margin="3,3,0,0" Width="70"/>
            <TreeView SelectedItemChanged="mainTreeView_SelectedItemChanged" x:Name="mainTreeView" Margin="3,31,3,3"
                      Foreground="White" BorderThickness="0" Background="{x:Null}" BorderBrush="{x:Null}"/>
          </Grid>
        </Border>
        <Border x:Name="settingsborder" Opacity="1" CornerRadius="7" Width="569" Height="322"
                Margin="10,648,208.5,-574" Background="#FF232323">
          <Grid>
            <Label Content="General Settings" Foreground="#DDFFFFFF" FontSize="22" Margin="58,9,344.333,276"
                   Style="{DynamicResource SeperatorLabel}" Background="{x:Null}"/>
            <CheckBox Checked="CheckBox_Checked" Unloaded="CheckBox_Unloaded" Unchecked="CheckBox_Unchecked"
                      Content="TopMost" Margin="58,51,431,245" Foreground="White" Background="#FF33B8FB"
                      BorderBrush="{x:Null}"/>
            <CheckBox Checked="CheckBox_Checked_1" x:Name="dccheck" Content="Discord" Margin="143,51,346,245"
                      Foreground="White" Background="#FF33B8FB" BorderBrush="{x:Null}"/>
            <CheckBox Checked="ytcheck_Checked" x:Name="ytcheck" Content="Youtube" Margin="228,51,261,245"
                      Foreground="White" Background="#FF33B8FB" BorderBrush="{x:Null}"/>
            <CheckBox Checked="CheckBox_Checked_2" Unchecked="CheckBox_Unchecked_1" Content="Transparency"
                      Margin="313,51,157,245" Foreground="White" Background="#FF33B8FB" BorderBrush="{x:Null}"/>
            <CheckBox Checked="CheckBox_Checked_3" Unchecked="CheckBox_Unchecked_2" Content="FPS Unlocker"
                      Margin="417,51,53,245" Foreground="White" Background="#FF33B8FB" BorderBrush="{x:Null}"/>
            <Label Content="API Settings" Foreground="#DDFFFFFF" FontSize="22" Margin="58,82,385.833,203"
                   Style="{DynamicResource SeperatorLabel}" Background="{x:Null}"/>
            <CheckBox Checked="wrdcheck_Checked" x:Name="wrdcheck" Content="WeAreDevs" Margin="58,124,425.667,172"
                      Foreground="White" Background="#FF33B8FB" BorderBrush="{x:Null}"/>
            <CheckBox Checked="oxycheck_Checked" x:Name="oxycheck" Content="Oxygen U" Margin="148.333,124,341.167,172"
                      Foreground="White" Background="#FF33B8FB" BorderBrush="{x:Null}"/>
            <Label Content="Credits" Foreground="#DDFFFFFF" FontSize="22" Margin="58,155,435.5,130"
                   Style="{DynamicResource SeperatorLabel}" Background="{x:Null}"/>
            <CheckBox Checked="oxycheck_Copy_Checked" x:Name="oxycheck_Copy" Content="Show Credits"
                      Margin="58,197,414.5,99" Foreground="White" Background="#FF33B8FB" BorderBrush="{x:Null}"/>
            <CheckBox Checked="easycheck_Checked" x:Name="easycheck" Content="EasyExploits"
                      Margin="232.833,124,247.167,172" Foreground="White" Background="#FF33B8FB" BorderBrush="{x:Null}"/>
          </Grid>
        </Border>
      </Grid>
    </Border>
  </Grid>
</Window>